{"version":3,"file":"static/js/993.ae0a6a1d.chunk.js","mappings":"wLAIA,MAgGA,EAhGeA,KACb,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,CAAC,GAW5C,OATAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,MACMC,SADYC,EAAAA,EAAWC,gBACZF,KAAKG,QAAOC,GAA+D,YAAhDA,EAAKC,OAAOD,EAAKC,OAAOC,OAAO,GAAGC,cAC9EX,EAAaI,EAAKQ,UAAU,EAE9BC,EAAW,GACV,KAGDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAGC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MACEH,MAAO,CACLI,UAAW,SACXH,QAAS,gBACTI,MAAO,WACPH,SACH,cAGAnB,EAAUW,OAAS,IACT,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWuB,KAAI,CAACd,EAAMe,KACpBJ,EAAAA,EAAAA,KAAA,OAAiBH,MAAO,CAAEQ,MAAO,QAASN,SACvCV,EAAKiB,MAAMH,KAAI,CAACI,EAASC,KAAC,IAAAC,EAAAC,EAAAC,EAAA,OACzBhB,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLe,aAAc,OACdC,aAAc,iBACdf,QAAS,qBACTO,MAAO,OACPS,QAAS,OACTC,eAAgB,gBAChBC,SAAU,QACVjB,SAAA,EAEFJ,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEiB,QAAS,QAASf,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEH,MAAO,CACLoB,WAAY,UACZZ,MAAO,MACPa,OAAQ,OACRnB,UAEFC,EAAAA,EAAAA,KAAA,OACEmB,IAAsB,QAAnBV,EAAEF,EAAQa,iBAAS,IAAAX,OAAA,EAAjBA,EAAmBY,OAAO,GAC/BxB,MAAO,CACLQ,MAAO,OACPa,OAAQ,OACRI,UAAW,WAEbC,IAAI,SAGR5B,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAE2B,YAAa,GAAIN,OAAQ,QAASnB,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAE4B,cAAe,IAAK1B,SACb,QADaW,EAC9BH,EAAQa,iBAAS,IAAAV,OAAA,EAAjBA,EAAmBgB,QAGtB/B,EAAAA,EAAAA,MAAA,MAAIE,MAAO,CAAE4B,cAAe,IAAK1B,SAAA,CAAC,cACb,OAAPQ,QAAO,IAAPA,OAAO,EAAPA,EAASoB,mBAI3BhC,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEJ,EAAAA,EAAAA,MAAA,MAAIE,MAAO,CAAE4B,cAAe,IAAK1B,SAAA,CAAC,wBAEd,QAAjBY,EAAAJ,EAAQa,iBAAS,IAAAT,OAAA,EAAjBA,EAAmBiB,QAAe,OAAPrB,QAAO,IAAPA,OAAO,EAAPA,EAASoB,cAEvC3B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0DAENJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEJ,EAAAA,EAAAA,MAAA,MACEE,MAAO,CAAEgC,cAAe,aAAcJ,cAAe,IAAK1B,SAAA,CAC3D,iBACgB,IACd,SAAWV,EAAKC,OAAOD,EAAKC,OAAOC,OAAS,GAAGC,gBAElDQ,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CACHC,GAAE,iBAAAC,OAAmB3C,EAAK4C,KAC1BrC,UAAU,cAAaG,SACxB,qBAIC,KA/DAK,QAmEV,C","sources":["pages/orders/Orders.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ApiService from \"../../services/ApiService\";\r\n\r\nconst Orders = () => {\r\n  const [orderData, setOrderData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getOrders = async () => {\r\n      const res = await ApiService.getUserOrder();\r\n      const data = res.data.filter(item=> {return item.status[item.status.length-1].orderStatus!=='pending'})\r\n      setOrderData(data.reverse());\r\n    };\r\n    getOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\" style={{ padding: \"2rem\" }}>\r\n      <h1\r\n        style={{\r\n          textAlign: \"center\",\r\n          padding: \"1rem 0 1.5rem\",\r\n          color: \"#002b2a\",\r\n        }}\r\n      >\r\n        My Orders\r\n      </h1>\r\n      {orderData.length > 0 &&\r\n        orderData?.map((item, index) => (\r\n          <div key={index} style={{ width: \"100%\" }}>\r\n            {item.items.map((product, i) => (\r\n              <div\r\n                style={{\r\n                  marginBottom: \"1rem\",\r\n                  borderBottom: \"1px solid #000\",\r\n                  padding: \"0.5rem 0.5rem 2rem\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  flexWrap: \"wrap\",\r\n                }}\r\n              >\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div\r\n                    style={{\r\n                      background: \"#264043\",\r\n                      width: \"8em\",\r\n                      height: \"8em\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={product.productId?.images[0]}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"contain\",\r\n                      }}\r\n                      alt=\"/\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ paddingLeft: 10, height: \"100%\" }}>\r\n                    <h4 style={{ paddingBottom: 10 }}>\r\n                      {product.productId?.name}\r\n                    </h4>\r\n\r\n                    <h4 style={{ paddingBottom: 10 }}>\r\n                      Quantity:- {product?.quantity}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <h4 style={{ paddingBottom: 10 }}>\r\n                    Total Price:- à¸¿\r\n                    {product.productId?.price * product?.quantity}\r\n                  </h4>\r\n                  <h5>Order Date:- {}</h5>\r\n                  <h5>Estimated delver time is 6 to 7 business week day</h5>\r\n                </div>\r\n                <div>\r\n                  <h4\r\n                    style={{ textTransform: \"capitalize\", paddingBottom: 20 }}\r\n                  >\r\n                    Order Status:-{\" \"}\r\n                    {\"Order \" + item.status[item.status.length - 1].orderStatus}\r\n                  </h4>\r\n                  <Link\r\n                    to={`/order-detail/${item._id}`}\r\n                    className=\"buttonStyle\"\r\n                  >\r\n                    Track Order\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"names":["Orders","orderData","setOrderData","useState","useEffect","async","data","ApiService","getUserOrder","filter","item","status","length","orderStatus","reverse","getOrders","_jsxs","className","style","padding","children","_jsx","textAlign","color","map","index","width","items","product","i","_product$productId","_product$productId2","_product$productId3","marginBottom","borderBottom","display","justifyContent","flexWrap","background","height","src","productId","images","objectFit","alt","paddingLeft","paddingBottom","name","quantity","price","textTransform","Link","to","concat","_id"],"sourceRoot":""}