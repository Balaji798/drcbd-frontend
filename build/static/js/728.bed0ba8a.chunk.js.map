{"version":3,"file":"static/js/728.bed0ba8a.chunk.js","mappings":"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","sources":["components/Rating.jsx","components/verticalslider/VerticalSlider.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { TbStarFilled, TbStarHalfFilled, TbStar } from \"react-icons/tb\";\r\n\r\nconst Rating = ({ userReviews }) => {\r\n  // Check if userReviews is not empty\r\n  if (userReviews.length === 0) {\r\n    return null; // or return a default state/message\r\n  }\r\n\r\n  const totalRating = userReviews.reduce((sum, item) => sum + item.rating, 0);\r\n  const averageRating = totalRating / userReviews.length;\r\n  // Check if averageRating is a valid number\r\n  if (isNaN(averageRating) || !isFinite(averageRating)) {\r\n    return null; // or return a default state/message\r\n  }\r\n\r\n  const renderStars = () => {\r\n    const fullStars = Math.floor(averageRating);\r\n    const hasHalfStar = averageRating % 1 !== 0;\r\n    const stars = Array.from({ length: 5 }, (_, index) => {\r\n      if (index < fullStars) {\r\n        return <TbStarFilled key={index} size={25}/>;\r\n      } else if (index === fullStars && hasHalfStar) {\r\n        return <TbStarHalfFilled key={`${fullStars}-half`} size={25}/>;\r\n      } else {\r\n        return (\r\n          <TbStar key={`${fullStars + (hasHalfStar ? 1 : 0) + index}-empty`} size={25}/>\r\n        );\r\n      }\r\n    });\r\n\r\n    return stars;\r\n  };\r\n\r\n  return <div>{renderStars()}</div>;\r\n};\r\n\r\nexport default Rating;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\nimport { ImStarFull } from \"react-icons/im\";\r\nimport { SlArrowUp, SlArrowDown } from \"react-icons/sl\";\r\nimport \"./verticalSlider.css\";\r\nimport axios from \"axios\";\r\nimport Rating from \"../Rating\";\r\nimport { TbStar } from \"react-icons/tb\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nconst VerticalSlider = ({ productId }) => {\r\n  const [open, setOpen] = useState(false)\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [displayedReviews, setDisplayedReviews] = useState([]);\r\n  const [userReviews, setUserReviews] = useState([]);\r\n  const reviewStar = [1, 2, 3, 4, 5];\r\n  const user = localStorage.getItem(\"token\");\r\n  const [feed, setFeed] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    review: \"\",\r\n    rating: \"\",\r\n    productId: productId,\r\n  });\r\n  useEffect(() => {\r\n    getFeed();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const handelSubmit = async () => {\r\n    try {\r\n      if(feed.rating === '' && feed.review === ''){\r\n        alert('Review and rating required ')\r\n        return\r\n      }\r\n      if (user) {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user}`,\r\n            \"Content-Type\": \"application/json\", // Set the content type to JSON\r\n          },\r\n        };\r\n         await axios.post(\r\n          \"https://drcbd-backend-zgqu.onrender.com/review/add-review\",\r\n          //https://52.77.244.89:8080\r\n          feed,\r\n          config\r\n        );\r\n        setFeed({\r\n          review: \"\",\r\n          rating: \"\",\r\n          productId: productId,\r\n        });\r\n        \r\n        getFeed();\r\n      }else {\r\n        setOpen(true)\r\n      }\r\n    } catch (err) {\r\n      setOpen(true)\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  const getFeed = async () => {\r\n    const productReviews = await axios.post(\r\n      \"https://drcbd-backend-zgqu.onrender.com/review/get-reviews-by-productId\",\r\n      //https://52.77.244.89:8080\r\n      { productId: productId }\r\n    );\r\n    setUserReviews(productReviews.data);\r\n    setDisplayedReviews(productReviews.data.slice(0, 3));\r\n  };\r\n  const shiftAmount = 1; // Shift one step at a time\r\n  const handleButtonClick = (direction) => {\r\n    // const shift = direction === \"forward\" ? shiftAmount : -shiftAmount;\r\n    // const nextIndex = (currentIndex + shift + reviews.length) % reviews.length;\r\n    // setCurrentIndex(nextIndex);\r\n    // const shiftedReviews = reviews.map(\r\n    //   (_, index) => reviews[(nextIndex + index) % reviews.length]\r\n    // );\r\n    // setDisplayedReviews(shiftedReviews.slice(0, 3));\r\n    const shift = direction === \"forward\" ? shiftAmount : -shiftAmount;\r\n    const nextIndex =\r\n      (currentIndex + shift + userReviews.length) % userReviews.length;\r\n\r\n    // Ensure nextIndex is within the bounds of the userReviews array\r\n    if (nextIndex >= 0 && nextIndex < userReviews.length) {\r\n      setCurrentIndex(nextIndex);\r\n      const shiftedReviews = userReviews.map(\r\n        (_, index) => reviews[(nextIndex + index) % reviews.length]\r\n      );\r\n      setDisplayedReviews(shiftedReviews.slice(0, 3));\r\n    }\r\n  };\r\n  const calculateAgeDescription = (givenDate) => {\r\n    const date = new Date(givenDate);\r\n    const currentDate = new Date();\r\n    const difference = currentDate - date;\r\n    const daysDifference = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n    const weeksDifference = Math.floor(daysDifference / 7);\r\n    const monthsDifference = Math.floor(daysDifference / 30);\r\n\r\n    if (daysDifference === 0) {\r\n      return \"Today\";\r\n    } else if (daysDifference === 1) {\r\n      return \"Yesterday\";\r\n    } else if (weeksDifference === 1) {\r\n      return \"1 week ago\";\r\n    } else if (weeksDifference > 1 && weeksDifference < 4) {\r\n      return `${weeksDifference} weeks ago`;\r\n    } else if (monthsDifference === 1) {\r\n      return \"1 month ago\";\r\n    } else if (monthsDifference > 1) {\r\n      return `${monthsDifference} months ago`;\r\n    } else {\r\n      return \"More than a month ago\";\r\n    }\r\n  };\r\n\r\n  const calculateAverageRating = (reviews) => {\r\n    let totalRating = 0;\r\n    let totalReviews = 0;\r\n\r\n    for (const review of reviews) {\r\n      totalRating += review.rating;\r\n      totalReviews++;\r\n    }\r\n    return totalRating / totalReviews > 0\r\n      ? Math.round((totalRating / totalReviews) * 10) / 10\r\n      : 0;\r\n  };\r\n  return (\r\n    <>\r\n    {open && <Modal setOpen={setOpen} user={user} />}\r\n    <div className=\"review-container center\" style={{ background: \"#ededed\" }}>\r\n      <div\r\n        style={{ maxWidth: \"1200px\", width: \"100%\", padding: \"2rem 1rem 0\" }}\r\n      >\r\n        <h1 style={{ fontFamily: \"'Wix Madefor Text', sans-serif\" }}>\r\n          Reviews\r\n        </h1>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            paddingBottom: 5,\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <div\r\n              style={{\r\n                padding: \"0.5rem 3rem\",\r\n                clipPath: \"polygon(15% 0%, 100% 0%, 85% 100%, 0% 100%)\",\r\n                width: \"18rem\",\r\n                background: \"#0b4640\",\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              <h1 style={{ fontSize: \"30px\" }}>\r\n                {calculateAverageRating(userReviews)}\r\n              </h1>\r\n            </div>\r\n            <div\r\n              style={{\r\n                filter: \"drop-shadow(-1px 6px 3px rgba(50, 50, 0, 0.5))\",\r\n                position: \"absolute\",\r\n                marginLeft: \"7rem\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  background: \"#fff\",\r\n                  padding: \"0.3rem 3rem\",\r\n                  width: \"15rem\",\r\n                  clipPath: \"polygon(15% 0%, 100% 0%, 85% 100%, 0% 100%)\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"90%\",\r\n                    color: \"#fdba09\",\r\n                    paddingTop: 3,\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {userReviews.length > 0 ? (\r\n                    <Rating userReviews={userReviews} />\r\n                  ) : (\r\n                    [1, 2, 3, 4, 5].map((_, index) => (\r\n                      <TbStar key={index} size={25} />\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p>{userReviews.length} Reviews count</p>\r\n      </div>\r\n      <div\r\n        className=\"review-container\"\r\n        style={{\r\n          maxWidth: \"1200px\",\r\n          width: \"100%\",\r\n          paddingBottom: \"2rem\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"reviews\">\r\n          <div className=\"vertical-slider\">\r\n            {displayedReviews.length > 2 && (\r\n              <SlArrowUp\r\n                onClick={() => handleButtonClick(\"forward\")}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  alignSelf: \"center\",\r\n                  fontSize: \"55px\",\r\n                }}\r\n              />\r\n            )}\r\n            <div style={{ width: \"100%\" }}>\r\n              {displayedReviews.map((item, index) => (\r\n                <div className=\"review\" key={index}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: \"6rem\",\r\n                    }}\r\n                  >\r\n                    <BsPersonCircle color=\"#3cbb90\" size={45} />\r\n                    <p>{item?.userName}</p>\r\n                    <p style={{ fontSize: 11 }}>Verified</p>\r\n                    <div style={{ color: \"yellow\", paddingBottom: 3 }}>\r\n                      {Array.from(\r\n                        { length: item?.rating },\r\n                        (_, index) => index + 1\r\n                      ).map((ret, i) => {\r\n                        return <ImStarFull key={i} />;\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  <p\r\n                    style={{\r\n                      paddingLeft: 5,\r\n                      width: \"70%\",\r\n                      wordWrap: \"break-word\",\r\n                    }}\r\n                  >\r\n                    {item?.review}\r\n                  </p>\r\n                  <p style={{ fontSize: 10, alignSelf: \"flex-end\" }}>\r\n                    {calculateAgeDescription(item?.createdAt)}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {displayedReviews.length > 2 && (\r\n              <SlArrowDown\r\n                onClick={() => handleButtonClick(\"backward\")}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  alignSelf: \"center\",\r\n                  fontSize: \"55px\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              width: \"90%\",\r\n            }}\r\n          >\r\n            <a style={{ textAlign: \"end\" }} href=\"#\">\r\n              {\" \"}\r\n              See More {\">>\"}\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"add-review\">\r\n          <h2>Add Review</h2>\r\n          <p style={{ padding: \"0.5rem 0\" }}>Your Rating</p>\r\n          <div\r\n            style={{\r\n              paddingLeft: 5,\r\n              height: 50,\r\n            }}\r\n          >\r\n            <div style={{ paddingBottom: 3 }}>\r\n              {reviewStar.map((item) => (\r\n                <ImStarFull\r\n                  style={{\r\n                    fontSize: 35,\r\n                    color: reviews?.includes(item) ? \"#fdba09\" : \"#fff\",\r\n                    marginRight: \"0.5rem\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setReviews(\r\n                      Array.from({ length: item }, (_, index) => index + 1)\r\n                    );\r\n                    setFeed({ ...feed, rating: item });\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <p style={{ padding: \"0.5rem 0\" }}>Your Review</p>\r\n          <textarea\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"12rem\",\r\n              padding: \"0.2rem 0.5rem\",\r\n            }}\r\n            onChange={(e) => setFeed({ ...feed, review: e.target.value })}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"flex-end\",\r\n              width: \"100%\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                background: \"#fff\",\r\n                width: \"5rem\",\r\n                color: \"#0b4640\",\r\n                textAlign: \"center\",\r\n                fontWeight: \"bold\",\r\n                fontSize: 20,\r\n                padding: \"0.5rem 0\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={handelSubmit}\r\n            >\r\n              Submit\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerticalSlider;\r\n"],"names":["_ref","userReviews","length","averageRating","reduce","sum","item","rating","isNaN","isFinite","_jsx","children","renderStars","fullStars","Math","floor","hasHalfStar","Array","from","_","index","TbStarFilled","size","TbStarHalfFilled","concat","TbStar","productId","open","setOpen","useState","currentIndex","setCurrentIndex","reviews","setReviews","displayedReviews","setDisplayedReviews","setUserReviews","user","localStorage","getItem","feed","setFeed","name","email","review","useEffect","getFeed","async","productReviews","axios","post","data","slice","handleButtonClick","direction","nextIndex","shiftedReviews","map","calculateAgeDescription","givenDate","date","Date","difference","daysDifference","weeksDifference","monthsDifference","_jsxs","_Fragment","Modal","className","style","background","maxWidth","width","padding","fontFamily","display","justifyContent","paddingBottom","alignItems","clipPath","color","fontSize","totalRating","totalReviews","round","calculateAverageRating","filter","position","marginLeft","paddingTop","Rating","flexWrap","SlArrowUp","onClick","cursor","alignSelf","flexDirection","BsPersonCircle","userName","ret","i","ImStarFull","paddingLeft","wordWrap","createdAt","SlArrowDown","textAlign","href","height","includes","marginRight","onChange","e","target","value","fontWeight","alert","config","headers","Authorization","err"],"sourceRoot":""}